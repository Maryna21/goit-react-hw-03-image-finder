{"version":3,"sources":["components/Searchbar/searchbar.js","components/ImageGalleryItem/imageGalleryItem.js","services/imagesApi.js","components/Modal/modal.js","components/Button/button.js","components/ImageGallery/imageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","searchNameImg","handleNameChange","event","setState","currentTarget","value","toLowerCase","hanleSubmit","preventDefault","trim","toast","warning","props","onSubmit","className","this","type","placeholder","onChange","Component","ImageGalleryItem","src","alt","toggleModal","onClick","axios","defaults","baseURL","params","key","image_type","orientation","per_page","api","getImg","query","a","page","get","q","data","hits","totalHits","console","log","modalRoot","document","querySelector","Modal","createPortal","children","Button","ImageGallery","status","error","images","showModal","largeImg","loadMore","prevState","handleClickImage","prevProps","prevName","nextName","prevPage","nextPage","searchMoreImages","imagesAPI","then","Promise","reject","Error","catch","finally","window","scrollTo","top","documentElement","scrollHeight","behavior","map","item","webformatURL","tags","largeImageUrl","id","message","color","height","width","length","onLoadMore","onToggleModal","App","handleFormSubmil","autoClose","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa47335a.chunk.js","sourcesContent":["import 'App.css';\nimport { toast } from 'react-toastify';\nimport { Component } from 'react';\nexport default class Searchbar extends Component {\n    state = {\n        searchNameImg: '',\n    }\n\n    handleNameChange = event => {\n        this.setState({\n            searchNameImg: event.currentTarget.value.toLowerCase()\n        });\n    }\n\n    hanleSubmit = event => {\n        event.preventDefault();\n        if (this.state.searchNameImg.trim() === '') {\n           return toast.warning('Поле пошуку пусте!');\n           \n        }\n\n        this.props.onSubmit(this.state.searchNameImg);\n\n        this.setState({ searchNameImg: '' });\n    }\n\n    render(){\n    return (\n        <header className=\"Searchbar\">\n            <form className=\"SearchForm\" onSubmit={this.hanleSubmit}>\n                <button type=\"submit\" className=\"SearchForm-button\">\n                    <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n\n                <input\n                    className=\"SearchForm-input\"\n                    type=\"text\"\n                    // autocomplete=\"off\"\n                    // autofocus\n                    placeholder=\"Search images and photos\"\n                    onChange={this.handleNameChange}\n                />\n            </form>\n        </header>\n    )\n    }; \n}","import 'App.css';\nexport default function ImageGalleryItem({ src, alt, toggleModal }) {\n   \n    return (\n        <li\n            className=\"ImageGalleryItem\"\n        >\n                <img\n                    src={src}\n                    alt={alt}\n                className=\"ImageGalleryItem-image\"\n                onClick = {toggleModal}\n            />\n        </li>      \n    )\n    }\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\naxios.defaults.params = {\n    key: '19250465-3ecaba10f96f1a4c0424b71f3',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: 12,\n}\nconst getImg = async (query, page = 1) => {\n    // console.log('query', query);\n    // console.log('page', page );\n    try {\n        const { data } = await axios.get('', {\n            params: { q: query, page },\n        })\n        return {\n            hits: data.hits,\n            totalHits: data.totalHits,\n        };\n    }\n    catch (error) {\n        console.log(error);\n        return {\n            hits: [],\n            totalHits: 0,\n        }\n    }\n}\n\n const api = {\n    getImg\n}\nexport default api;\n\n\n\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '19250465-3ecaba10f96f1a4c0424b71f3';\n\n//  function fetchImages(query, page = 1) {\n//     return fetch(`${BASE_URL}?q=${query}&page={page}&key=${API_KEY}&&image_type=photo&orientation=horizontal&per_page=12`)\n//                 .then(response => {\n//                     if (response.ok) {\n//                         return response.json()\n//                     }\n                  \n//                 })\n//  }\n//  const api = {\n//     fetchImages\n// }\n// export default api;","import 'App.css';\nimport { Component } from 'react';\nimport { createPortal } from 'react-dom';\nconst modalRoot = document.querySelector('#modal-root');\nexport default class Modal extends Component {\n    componentDidMount() {\n        console.log('Modal componentDidMount')\n    }\n    componentWillUnmount() {\n        console.log('Modal componentWillUnmount')\n    }\n    render() {\n        return createPortal(\n            <div className=\"Overlay\">\n                <div className=\"Modal\">\n                    {this.props.children}\n                </div>\n            </div>,\n            modalRoot,\n        );\n    }\n}\n ","import 'App.css';\nexport default function Button({ }) {\n   \n   \n    return (\n        <Button type=\"button\" className=\"Button\">Load more</Button>\n    )\n    }\n","import 'App.css';\nimport { Component } from 'react';\nimport ImageGalleryItem from 'components/ImageGalleryItem/imageGalleryItem';\nimport imagesAPI from 'services/imagesApi';\nimport Loader from \"react-loader-spinner\";\nimport Modal from 'components/Modal/modal';\nimport Button from 'components/Button/button';\n\nexport default class ImageGallery extends Component {\n    state = {\n        status: 'idle',\n        error: null,\n        images: [],\n        showModal: false,\n        page: 1,\n        largeImg: '',\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const prevName = prevProps.searchNameImg;\n        const nextName = this.props.searchNameImg;\n        const prevPage = prevState.page;\n        const nextPage = this.state.page;\n\n        if (prevName !== nextName) {\n            this.setState({\n                images: [],\n                page: 1\n            })\n            this.searchMoreImages(nextName, 1);\n            \n        }\n        if (prevPage !== nextPage && nextPage > 1) {\n            this.searchMoreImages(nextName, nextPage)\n            console.log('error');\n        }\n    }\n        // console.log('prevName', prevName);\n        // console.log('nextName', nextName);\n        // console.log('nextPage', nextPage);\n        \n            searchMoreImages(nextName, nextPage){\n                this.setState({\n                    status: 'pending',\n                })\n                imagesAPI\n                    .getImg(nextName, nextPage)\n                    .then(({ images, totalHits}) => {\n                        if (totalHits === 0) {\n                            this.setState({\n                                images: [],\n                                status: 'reject',\n                            })\n                            return Promise.reject(\n                                new Error(`This ${nextName} not found`)\n                            );\n                        }\n                        this.setState(prevState => ({\n                            images: [...prevState.images, ...images],\n                            status: 'resolved',\n                        }))\n                    })\n                    .catch(error => this.setState({ error, status: 'rejected' }))\n                    .finally(() => {\n                        window.scrollTo({\n                            top: document.documentElement.scrollHeight,\n                            behavior: 'smooth',\n                        });\n                    })\n            }\n        \n    \n    toggleModal = () => {\n        this.setState(({ showModal }) => ({\n            showModal: !showModal,\n        }))\n        \n    };\n     \n    loadMore = () => {\n        this.setState(prevState => {\n            return { page: prevState.page + 1 }\n        })\n    }\n    \n    handleClickImage = largeImg => {\n        this.setState({ largeImg: largeImg })\n        this.toggleModal();\n    }\n  \n    render() {\n        const { status, error, images, showModal, largeImg } = this.state;\n        return ( \n            <div>\n                {status === 'idle' && <p>Write seach image name.</p>}\n                    <ul className=\"ImageGallery\">\n                     {images &&\n                        images.map(item => (\n                            <ImageGalleryItem\n                                key={item.id}\n                                src={item.webformatURL}\n                                alt={item.tags}\n                                onClick={() => {\n                                    this.handleClickImage(item.largeImageUrl)\n                                }}\n                            />))\n                        }\n                    </ul>\n                {status === 'rejected' && <p>{error.message}</p>}\n                    {status === 'pending' &&\n                <Loader\n                type=\"Circles\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                />\n        }\n                    { (images.length > 0 || status === 'resolved') &&\n                        (<Button onLoadMore={this.loadMore} />)}\n                    {showModal &&\n                        <Modal onToggleModal={this.toggleModal}>\n                        <img src={largeImg} alt={images.tags} />\n                        </Modal>}\n                    </div>\n            )\n        }      \n    }\n\n","import { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from 'components/Searchbar/searchbar';\nimport ImageGallery from 'components/ImageGallery/imageGallery';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { Component } from 'react';\n\n\nexport default class App extends Component {\n  state = {\n    searchNameImg: '',\n  }\n  \n  handleFormSubmil = searchNameImg => {\n    this.setState({ searchNameImg });\n  }\n\n  render(){\n\n      return (\n        <>\n          <Searchbar onSubmit={this.handleFormSubmil} />\n          <ToastContainer autoClose={3000} position=\"top-center\" />\n          <ImageGallery searchNameImg={this.state.searchNameImg} />\n        </>\n      );\n    }\n  }\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}